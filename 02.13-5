1. Find Smallest Letter Greater Than Target(#744)
2. Min Cost Climbing Stairs (#746)
3. Largest Number At Least Twice of Others(#747)
4. Shortest Completing Word(#748)
5. Prime Number of Set Bits in Binary Representation(#762)




Jane:




Suki:
1.
for i in letters:
            if i > target:
                return i
        return letters[0]
method2: binary search
   while left<=right:
            mid = left + (right-left)//2
            if letters[mid] <= target:
                left +=1
            elif letters[mid]>target:
                right = mid -1
        return letters[left%len(letters)]
3.
 max_ = max(nums)
        for i in nums:
            if i != max_ and i > max_/2:
                return -1
        return nums.index(max_)

4. map
for c in word:
                if 'a'<=c<='z':
                    conts[ord(c)- ord('a')] += 1
                elif 'A'<=c<='Z':
                    conts[ord(c)-ord('A')] += 1
            return conts
            
5. count '1' in binary number
for i in range(left,right+1):
            copy_i = bin(i)
            if copy_i.count('1') in primes:
                count +=1
method2:
brute force
def helper(number):
            if number == 1: return False
            for i in range(2,int(number**0.5)+1):
                if number%i == 0:
                    return False
            return True
        for i in range(left,right+1):
            bin_i = bin(i)[2:].count('1')
            if helper(bin_i):
                res += 1

comment:
