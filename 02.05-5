1. Array Partition I (#561)
2. Binary Tree Tilt (#563)
3. Reshape the Matrix (#566)
4. Subtree of Another Tree (#572)
5. Distribute Candies (#575)



Jane:
1.
排序后，相邻为一组，选min那个
2.
自下向上，用recursive
nonlocal tilt_sum，每次recursive都加上当前的左右子树之差
3.



Suki:
1. 贪心算法，舍去第二大值，保留最大值
for i in range(0,len(nums),2):
            sum_ += nums[i]
            
2.
遍历左节点和右节点，相减就行
l = dfs(rt.left)
            r = dfs(rt.right)
            self.res  += abs(l-r)

3.
method1: numpy
np.array(mat).reshape((r,c)).tolist()
metho2:
手动做numpy
res =[[0]*c for i in range(r)]
        for i in range(m*n):
            res[i//c][i%c] = mat[i//n][i%n]
4.
method1: 判断节点是否一样
self.issame(root,subRoot) or self.isSubtree(root.left,subRoot) 
or self.isSubtree(root.right,subRoot)

5. set()
diff = len(set(candyType))
        if n/2>=diff:
            return diff
        if n/2 < diff:
            return n/2



Comment?
