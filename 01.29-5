1. Next Greater Element I (#496)
2. Keyboard Row (#500)
3. Find Mode in Binary Search Tree (#501)
4. Base 7(#504)
5. Relative Ranks (#506)




Jane:
1.
dict()存储nums2中元素：{i:第一个>i的数}
2.
把word转换成set与每一行的字母set取交集，如果结果等于word_set，即为同一行
3.
Recursively check each node (root), if its value in dic, it adds one, else dic[node.value] = 1.
Finally the method returns max values.
4.
判断正负，若负数则取绝对值，最后加负号。
添加余数，num=商
5.
先排序，再一一对应找rank



Suki:
1.
method1: dict()存储nums2中元素：{i:第一个>i的数}
遍历nums1,看是否存在{i:>i}的元素，没有则返回-1
for i in range(n2):
for j in range(i+1,n2):
if nums2[j]>nums2[i]:dict_[nums2[i]] = nums2[j]
for k in nums1:res.append(dict_.get(k,-1))

method2:
stack
while stack and stack[-1]<i:dict_[stack.pop()] = i

method3:
双循环，nums1的元素遇到nums2中相同元素时，遍历nums2中[相遇位置：end]元素，找到>相遇元素
for i in nums1:
            count += 1
            j = 0
            while j < len(nums2):
                if nums2[j] == i:
                    break
                else:
                    j+=1
            while j<len(nums2)-1:
                j+=1
                if nums2[j] > i:
                    res.append(nums2[j])
                    break


2. 
method1: 遍历，比较长度
count1 = count2 = count3 = 0
            for j in list(i.lower()):
                if j in q1: count1+=1
                if j in q2: count2+=1
                if j in q3: count3+=1
            if count1 == len(i) or count2 == len(i) or count3 == len(i):
                res.append(i)

method2: hash表给每个list里面的元素加值，判断每个单词值是否全都一样
        q1 = 'qwertyuiop'
        q2 = "asdfghjkl"
        q3 = "zxcvbnm"
        hash_ = {}
        for i in q1:
            hash_[i] = 1
        for i in q2:
            hash_[i] = 2
        for i in q3:
            hash_[i] = 3
 hash_[i[j].lower()] != hash_[i[j-1].lower()]:

3.
method1: hash存出现次数，返回次数max的
method2: dict遍历
method3: 中序遍历，小中大

4. 判断正负，取绝对值，最后决定是否加负号
res = res + str(remainder) 
num //= 7
if flag: res = '-' + res

5.
method1: hash
for i in range(len(initial_score)):
            if i == 0:hash_[initial_score[i]] = 'Gold Medal'
            elif i == 1:hash_[initial_score[i]] = 'Silver Medal'
            elif i == 2:hash_[initial_score[i]] = 'Bronze Medal'
            else:
                hash_[initial_score[i]] = str(initial_score.index(initial_score[i])+1)
method2: dict()
d = dict()
        for index_,value in enumerate(score):
            d[value] = index_
        score.sort(reverse = True)
        for i,num in enumerate(score,1):
            if i <= 3:
                ans[d[num]] = ['',"Gold Medal","Silver Medal","Bronze Medal"][i]

        
Comment:
Happy Lunar New Year!
Have a rest from 30/01/2022-03/02/2022
